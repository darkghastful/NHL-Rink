width <- (rink.x/rink.scale)
height <- (rink.y/rink.scale)
ggsave("test.rink.png", rink.plot(1), width=width, height=height, dpi=300)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1), width=width, height=height)
rink.y <- 90
rink.x <- (200/85)*90
rink.scale <- 15
width <- (rink.x/rink.scale)
height <- (rink.y/rink.scale)
ggsave("test.rink.png", rink.plot(1), width=width, height=height)
rink.plot(1)
```{r logo.rink, fig.width=6, fig.asp=85/200, dpi=1000}
rink.plot(1)
rink.plot(1)
rink.plot(1)
```{r logo.rink, fig.width=10, fig.asp=85/200, dpi=300}
rink.plot(1)
200/85)*90
(200/85)*90
rink.plot(1)
rink.plot(0.5)
rink.plot(0.75)
rink.y <- 90
rink.x <- (200/85)*90
rink.scale <- 10
width <- (rink.x/rink.scale)
height <- (rink.y/rink.scale)
ggsave("test.rink.png", rink.plot(1), width=width, height=height)
rink.y <- 90
rink.x <- (200/85)*90
rink.scale <- 15
width <- (rink.x/rink.scale)
height <- (rink.y/rink.scale)
ggsave("test.rink.png", rink.plot(1), width=width, height=height)
rink.plot(0.75)
rink.plot(1)
rink("UTA") # Use rink() for empty rink
rink.plot(1)
rink.plot(1)
rink.size("in", width="6")
rink.plot(7.196827)
rink.size("mm", width=30)
rink.size("mm", width=30)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
rink.processing(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.processing(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.processing(1)
rink.size("mm", width=30)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
rink.processing(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
rink.processing(1)
rink.processing(1)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.size("mm", width=30)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
rink.processing(1)
rink.processing(1, read.csv("inst/extdata/rink.unprocessed.csv"))
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
getwd(())
getwd()
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
rink.plot(1)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
rink.plot(1)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
(200/85)*90
(200/85)*9
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
rlang::last_trace()
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
((200/85)*9)/2
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
(200/85)*90
rlang::last_trace()
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
print(scale*rink.default.height)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
(200/85)*90
211/2
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
ggsave("test.rink.png", rink.plot(1), width=(200/85)*9, height=9)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
ggsave("test.rink.png", rink.plot(1), width=(200/85)*9, height=9)
rink.plot(TRUE)
file.rename("rink.plot.rds", "inst/extdata/rink.plot.rds")
blues.note.plot(TRUE, TRUE)
rink.plot(rink.size("in", width="6"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(rink.size("in", width="6"))
ink.size("in", width="6")
rink.size("in", width="6")
rink.plot(rink.size("in", width="6"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(rink.size("in", width="6"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(rink.size("in", width="6"))
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
rink.processing(1.7, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
rink.processing(1.7, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
rink.size("mm", width=30)
rink.processing(1.7, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
rink.size(1.7)
rink.size("mm", 1.7)
rink.size(scale=1.7)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1.416698), width=30, height=12.75028)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.processing(1.7, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
rink.plot(rink.size("in", width="6"))
rink.plot(rink.size("in", width="24"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(rink.size("in", width="24"))
rink.plot(1)
rink.plot(1)
rink.processing(1.7, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
rink.plot(1)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
0.1/10
rink.plot(1)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.size("mm", width=30)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
ggsave("test.rink.png", rink.plot(1), width=2, height=0.85)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
#' @param scale ensures the lines of the plot are properly scaled
rink.y <- 90
rink.x <- (200/85)*90
rink.scale <- 15
width <- (rink.x/rink.scale)
height <- (rink.y/rink.scale)
ggsave("test.rink.png", rink.plot(1), width=width, height=height)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/internal.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/blues.note.R", echo=TRUE)
rink.plot(1)
rink.plot(1)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
rink.unprocessed[,"size"] <- rink.unprocessed[,"size"]*2
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(1)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
ggsave("test.rink.png", rink.plot(1), width=200, height=85)
rink.plot(8)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/blues.note.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/internal.R", echo=TRUE)
library("bqutils")
library("stringr")
library("ggplot2")
library("ggforce")
library("magick")
library("rsvg")
library("magrittr")
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
rink.processing(1, rink.unprocessed=read.csv("inst/extdata/rink.unprocessed.csv"))
if(length(scale)>1){
scale <- scale$scale
}
args <- list(...)
if(!exists("rink.unprocessed")){
# csv.path <- system.file("extdata", "rink.unprocessed.csv", package="NHL.Rink")
# rink.unprocessed <- utils::read.csv(csv.path)
rink.unprocessed <- utils::read.csv("inst/extdata/rink.unprocessed.csv")
}
rink.y <- 85
rink.x <- 200
print(scale)
# rink.unprocessed[,"size"] <- rink.unprocessed[,"size"]*2
# rink.unprocessed[,"size"] <- ((rink.unprocessed[,"size"] / rink.scale)*25.4)*scale
# rink.unprocessed[,"size"] <- (rink.unprocessed[,"size"]*scale)
rink.unprocessed[,"size"] <- (rink.unprocessed[,"size"]*25.4)/12
endzone.faceoff.segments <- bqutils::subset.object(bqutils::subset.object(rink.unprocessed, "endzone.faceoff", "element"), "segment", "geom")
faceoff.circle <- bqutils::subset.object(bqutils::subset.object(rink.unprocessed, "endzone.faceoff", "element"), "circle", "geom")
faceoff.top.line.x <- 2.875
theta <- acos(((faceoff.circle[1,"r"]^2)+(faceoff.circle[1,"r"]^2)-(2.875^2))/(2*(faceoff.circle[1,"r"]^2)))
faceoff.top.line.y <- faceoff.circle[1,"r"]*cos(theta)
endzone.faceoff.segments[which(endzone.faceoff.segments[,"x"]==0), c("x", "xend", "y", "yend")] <- c(2.875, 2.875, faceoff.top.line.y, (faceoff.top.line.y+2))
dir <- c("x", "y")
rm(rink.unprocessed)
args <- list(...)
if(!exists("rink.unprocessed")){
# csv.path <- system.file("extdata", "rink.unprocessed.csv", package="NHL.Rink")
# rink.unprocessed <- utils::read.csv(csv.path)
rink.unprocessed <- utils::read.csv("inst/extdata/rink.unprocessed.csv")
}
rink.y <- 85
rink.x <- 200
print(scale)
endzone.faceoff.segments <- bqutils::subset.object(bqutils::subset.object(rink.unprocessed, "endzone.faceoff", "element"), "segment", "geom")
faceoff.circle <- bqutils::subset.object(bqutils::subset.object(rink.unprocessed, "endzone.faceoff", "element"), "circle", "geom")
faceoff.top.line.x <- 2.875
theta <- acos(((faceoff.circle[1,"r"]^2)+(faceoff.circle[1,"r"]^2)-(2.875^2))/(2*(faceoff.circle[1,"r"]^2)))
faceoff.top.line.y <- faceoff.circle[1,"r"]*cos(theta)
endzone.faceoff.segments[which(endzone.faceoff.segments[,"x"]==0), c("x", "xend", "y", "yend")] <- c(2.875, 2.875, faceoff.top.line.y, (faceoff.top.line.y+2))
dir <- c("x", "y")
for(a in 1:length(dir)){
endzone.faceoff.segments.inverse.dir <- endzone.faceoff.segments
endzone.faceoff.segments.inverse.dir[, c(dir[a], paste0(dir[a], "end"))] <- endzone.faceoff.segments.inverse.dir[, c(dir[a], paste0(dir[a], "end"))]*-1
endzone.faceoff.segments <- rbind(endzone.faceoff.segments, endzone.faceoff.segments.inverse.dir)
}
dir <- c("x", "y")
for(a in 1:length(dir)){
endzone.faceoff.segments[, c(dir[a], paste0(dir[a], "end"))] <- endzone.faceoff.segments[, c(dir[a], paste0(dir[a], "end"))] + faceoff.circle[1, dir[a]]
}
rink.unprocessed <- rbind(bqutils::subset.object(rink.unprocessed, "endzone.faceoff", "element", remove=TRUE), faceoff.circle, endzone.faceoff.segments)
dir <- c("x", "y")
for(a in 1:length(dir)){
rink.unprocessed.inverse.dir <- rink.unprocessed[rink.unprocessed[, paste0("inverse.", dir[a])],]
rink.unprocessed.inverse.dir[, c(dir[a], paste0(dir[a], "end"), "curvature")] <- rink.unprocessed.inverse.dir[, c(dir[a], paste0(dir[a], "end"), "curvature")]*(-1)
rink.unprocessed <- rbind(rink.unprocessed, rink.unprocessed.inverse.dir)
}
rink.frame <- rink.unprocessed
transparancy <- 1
rink.y <- 85
rink.x <- 200
rink.plot <- ggplot2::ggplot() +
ggplot2::theme_void() +
ggplot2::scale_linewidth_identity() +
ggplot2::scale_color_identity() +
ggplot2::scale_fill_identity() +
ggplot2::scale_x_continuous(limits=c(-(rink.x/2), (rink.x/2)), breaks=seq(-100, 100, by=25), expand=ggplot2::expansion(mult=c(0, 0))) +
ggplot2::scale_y_continuous(limits=c(-(rink.y/2), (rink.y/2)), breaks=seq(-42.5, 42.5, by=25), expand=ggplot2::expansion(mult=c(0, 0)))
layers <- bqutils::uuln(rink.frame[,"layer"]) %>%
.[order(.)]
for(b in 1:length(layers)){
if(layers[b]==4){
transparancy <- 1
}
rink.frame.layer <- bqutils::subset.object(rink.frame, layers[b], "layer")
rink.frame.layer.curve <- bqutils::subset.object(rink.frame.layer, "curve", "geom")
if(nrow(rink.frame.layer.curve)>0){
for(a in 1:nrow(rink.frame.layer.curve)){
rink.plot <- rink.plot +
ggplot2::geom_curve(data=rink.frame.layer.curve[a,], alpha=transparancy, inherit.aes=FALSE, curvature=rink.frame.layer.curve[a, "curvature"],
ggplot2::aes(x=x, xend=xend, y=y, yend=yend, linewidth=size, color=color))
}
}
# alpha("#1F77B4", 0.5)
rink.plot <- rink.plot +
ggforce::geom_circle(data=bqutils::subset.object(rink.frame.layer, "circle", "geom"), inherit.aes=FALSE,
ggplot2::aes(x0=x, y0=y, r=r, linewidth=size, color=color, fill=fill))
rink.plot <- rink.plot +
ggplot2::geom_segment(data=bqutils::subset.object(rink.frame.layer, "segment", "geom"), alpha=transparancy, inherit.aes=FALSE,
ggplot2::aes(x=x, xend=xend, y=y, yend=yend, linewidth=size, color=color))
}
rink.plot <- rink.plot + ggplot2::theme(plot.background=ggplot2::element_rect(color="white", fill="white"))
rink.plot
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot <- ggplot2::ggplot() +
ggplot2::theme_void() +
ggplot2::scale_linewidth_identity() +
ggplot2::scale_color_identity() +
ggplot2::scale_fill_identity() +
ggplot2::scale_x_continuous(limits=c(-(rink.x/2), (rink.x/2)), breaks=seq(-100, 100, by=25), expand=ggplot2::expansion(mult=c(0, 0))) +
ggplot2::scale_y_continuous(limits=c(-(rink.y/2), (rink.y/2)), breaks=seq(-42.5, 42.5, by=25), expand=ggplot2::expansion(mult=c(0, 0))) +
ggplot2::coord_cartesian()
layers <- bqutils::uuln(rink.frame[,"layer"]) %>%
.[order(.)]
for(b in 1:length(layers)){
if(layers[b]==4){
transparancy <- 1
}
rink.frame.layer <- bqutils::subset.object(rink.frame, layers[b], "layer")
rink.frame.layer.curve <- bqutils::subset.object(rink.frame.layer, "curve", "geom")
if(nrow(rink.frame.layer.curve)>0){
for(a in 1:nrow(rink.frame.layer.curve)){
rink.plot <- rink.plot +
ggplot2::geom_curve(data=rink.frame.layer.curve[a,], alpha=transparancy, inherit.aes=FALSE, curvature=rink.frame.layer.curve[a, "curvature"],
ggplot2::aes(x=x, xend=xend, y=y, yend=yend, linewidth=size, color=color))
}
}
# alpha("#1F77B4", 0.5)
rink.plot <- rink.plot +
ggforce::geom_circle(data=bqutils::subset.object(rink.frame.layer, "circle", "geom"), inherit.aes=FALSE,
ggplot2::aes(x0=x, y0=y, r=r, linewidth=size, color=color, fill=fill))
rink.plot <- rink.plot +
ggplot2::geom_segment(data=bqutils::subset.object(rink.frame.layer, "segment", "geom"), alpha=transparancy, inherit.aes=FALSE,
ggplot2::aes(x=x, xend=xend, y=y, yend=yend, linewidth=size, color=color))
}
rink.plot <- rink.plot + ggplot2::theme(plot.background=ggplot2::element_rect(color="white", fill="white"))
rink.plot
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot <- ggplot2::ggplot() +
ggplot2::theme_void() +
ggplot2::scale_linewidth_identity() +
ggplot2::scale_color_identity() +
ggplot2::scale_fill_identity() +
ggplot2::scale_x_continuous(limits=c(-(rink.x/2), (rink.x/2)), breaks=seq(-100, 100, by=25), expand=ggplot2::expansion(mult=c(0, 0))) +
ggplot2::scale_y_continuous(limits=c(-(rink.y/2), (rink.y/2)), breaks=seq(-42.5, 42.5, by=25), expand=ggplot2::expansion(mult=c(0, 0))) +
ggplot2::coord_fixed()
layers <- bqutils::uuln(rink.frame[,"layer"]) %>%
.[order(.)]
for(b in 1:length(layers)){
if(layers[b]==4){
transparancy <- 1
}
rink.frame.layer <- bqutils::subset.object(rink.frame, layers[b], "layer")
rink.frame.layer.curve <- bqutils::subset.object(rink.frame.layer, "curve", "geom")
if(nrow(rink.frame.layer.curve)>0){
for(a in 1:nrow(rink.frame.layer.curve)){
rink.plot <- rink.plot +
ggplot2::geom_curve(data=rink.frame.layer.curve[a,], alpha=transparancy, inherit.aes=FALSE, curvature=rink.frame.layer.curve[a, "curvature"],
ggplot2::aes(x=x, xend=xend, y=y, yend=yend, linewidth=size, color=color))
}
}
# alpha("#1F77B4", 0.5)
rink.plot <- rink.plot +
ggforce::geom_circle(data=bqutils::subset.object(rink.frame.layer, "circle", "geom"), inherit.aes=FALSE,
ggplot2::aes(x0=x, y0=y, r=r, linewidth=size, color=color, fill=fill))
rink.plot <- rink.plot +
ggplot2::geom_segment(data=bqutils::subset.object(rink.frame.layer, "segment", "geom"), alpha=transparancy, inherit.aes=FALSE,
ggplot2::aes(x=x, xend=xend, y=y, yend=yend, linewidth=size, color=color))
}
rink.plot <- rink.plot + ggplot2::theme(plot.background=ggplot2::element_rect(color="white", fill="white"))
if(save){
saveRDS(rink.plot, "./rink.plot.rds")
}
rink.plot
rink.frame
# Knit readme for push
devtools::build_readme()
rmarkdown::render("README.Rmd")
rmarkdown::render("README.Rmd")
rmarkdown::render("README.Rmd")
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/blues.note.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/internal.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
remove.packages("NHL.Rink")
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
library("bqutils")
library("stringr")
library("ggplot2")
library("ggforce")
library("magick")
library("rsvg")
library("magrittr")
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
rink.plot(rink.size("in", 6))
rink.plot(rink.size("in", width=6))
rink.plot(1)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
.3/2
.3333/2
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
2-.165
.75-.156
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
2-.16
2-.16
.75-.16
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
2-.15
.75-.15
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
.75-.1
2-.1
ggsave("test.rink.png", rink.plot(1), width=20, height=8.5)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/blues.note.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
blues.note.plot(rink = TRUE, scale=12)
rink(scale=12, "UTA") # Use rink() for empty rink
# Knit readme for push
devtools::build_readme()
devtools::check()
devtools::check()
devtools::check()
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
source("C:/Users/Bailey Quinn/Desktop/Github/NHL-SLAP/NHL.Rink/R/rink.R", echo=TRUE)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
# Knit readme for push
devtools::build_readme()
# Knit readme for push
devtools::build_readme()
# Knit readme for push
devtools::build_readme()
# Knit readme for push
devtools::build_readme()
rmarkdown::render("README.Rmd")
# Knit readme for push
devtools::build_readme()
